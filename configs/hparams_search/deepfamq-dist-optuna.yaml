# @package _global_

# example hyperparameter optimization of some experiment with Optuna:
# python train.py -m hparams_search=mnist_optuna experiment=example

defaults:
  - override /hydra/sweeper: optuna

# choose metric which will be optimized by Optuna
# make sure this is the correct name of some metric logged in lightning module!
optimized_metric: "val/pearson_best"

# here we define Optuna hyperparameter search
# it optimizes for value returned from function with @hydra.main decorator
# docs: https://hydra.cc/docs/next/plugins/optuna_sweeper
hydra:
  sweeper:
    _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper

    storage: null
    study_name: deepfamq-dist-optimization
    n_jobs: 1
    direction: maximize
    n_trials: 50

    # choose Optuna hyperparameter sampler
    # docs: https://optuna.readthedocs.io/en/stable/reference/samplers.html
    sampler:
      _target_: optuna.samplers.TPESampler
      seed: 12345
      n_startup_trials: 10 # number of random sampling runs before optimization starts

    # define range of hyperparameters
    params:
      embedding_dim: choice(64, 128, 256, 320, 512, 1024)
      model.lamb: interval(0.01, 0.5)
      model.encoder.dropout2: interval(0.0, 1.0)
      model.mlp.hidden_dim: choice(32, 64, 128, 256)
      model.mlp.n_layers: choice(2, 3, 4)
      model.mlp.dropout: interval(0.0, 1.0)
      
